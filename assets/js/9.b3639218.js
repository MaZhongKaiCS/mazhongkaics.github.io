(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{409:function(t,v,_){t.exports=_.p+"assets/img/git1.8d3ccc43.jpeg"},410:function(t,v,_){t.exports=_.p+"assets/img/git2.8bb825c7.png"},435:function(t,v,_){"use strict";_.r(v);var i=_(0),g=Object(i.a)({},(function(){var t=this,v=t.$createElement,i=t._self._c||v;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p",[t._v("https://mp.weixin.qq.com/s/dC8Vzpgj9Pst1IES-RslMA")]),t._v(" "),i("p",[t._v("git 常用命令：")]),t._v(" "),i("ul",[i("li",[t._v("git 克隆远程分支仓库")])]),t._v(" "),i("p",[i("strong",[t._v("git clone -b")]),t._v(" "),i("strong",[t._v("分支名称 远程地址")])]),t._v(" "),i("p",[t._v("git 克隆远程仓库项目时，如果不指定分支，只会克隆默认分支的内容。")]),t._v(" "),i("ul",[i("li",[t._v("查看git 用户名和密码      config： 配置、布局、显示配置命令")])]),t._v(" "),i("p",[i("strong",[t._v("git config user.name")])]),t._v(" "),i("p",[i("strong",[t._v("git config user.email")])]),t._v(" "),i("ul",[i("li",[t._v("分支相关")])]),t._v(" "),i("p",[i("strong",[t._v("git branch（查看当前分支）")])]),t._v(" "),i("p",[i("strong",[t._v("git branch -a（查看所有的分支）")])]),t._v(" "),i("p",[t._v("**git checkout 分支名（切换对应分支）**会自动将代码更新为分支代码")]),t._v(" "),i("p",[i("strong",[t._v("git branch 分支名")]),t._v(" （创建一个分支）")]),t._v(" "),i("p",[i("strong",[t._v("git branch -d")]),t._v(" "),i("strong",[t._v("分支名")]),t._v(" （删除一个分支）")]),t._v(" "),i("p",[i("strong",[t._v("git branch -D 分支名")]),t._v("（强制删除一个未合并的分支）")]),t._v(" "),i("p",[i("strong",[t._v("git checkout -b 分支名[基于的分支名或 commit 值]")]),t._v(" （切换分支并直接切换过去）")]),t._v(" "),i("ul",[i("li",[t._v("查看 git 历史")])]),t._v(" "),i("p",[i("strong",[t._v("history")])]),t._v(" "),i("ul",[i("li",[t._v("按照关键词搜索 git 历史")])]),t._v(" "),i("p",[i("strong",[t._v("history | grep push")])]),t._v(" "),i("ul",[i("li",[t._v("查看 commit 历史       summary ：总结")])]),t._v(" "),i("p",[i("strong",[t._v("git log")])]),t._v(" "),i("p",[i("strong",[t._v("git log --summary")])]),t._v(" "),i("ul",[i("li",[t._v("设置 git 账号")])]),t._v(" "),i("p",[i("strong",[t._v('git config --global user.name "MaZhongkaiCS"')])]),t._v(" "),i("p",[i("strong",[t._v('git config --global user.email "MAZhongkaiCS@gmail.com"')])]),t._v(" "),i("p",[t._v("查看用户名以及邮箱: "),i("strong",[t._v('git config user.name "MaZhongkai"')])]),t._v(" "),i("p",[i("strong",[t._v('git config user.email "MAZhongkaiCS@gmail.com"')])]),t._v(" "),i("ul",[i("li",[t._v("查看git账号")])]),t._v(" "),i("p",[i("strong",[t._v("git config --global --list git config --local --list")])]),t._v(" "),i("ul",[i("li",[t._v("仅仅查看某一项的配置")])]),t._v(" "),i("p",[i("strong",[t._v("git config --local user.name")])]),t._v(" "),i("ul",[i("li",[t._v("回滚本次修改")])]),t._v(" "),i("p",[i("strong",[t._v("git reset HEAD static/lib/js/constantsUrl.js")])]),t._v(" "),i("p",[i("strong",[t._v("git checkout -- \tstatic/lib/js/constantsUrl.js")])]),t._v(" "),i("ul",[i("li",[t._v("查看本次修改的代码")])]),t._v(" "),i("p",[i("strong",[t._v("git diff git diff HEAD git diff --staged")])]),t._v(" "),i("ul",[i("li",[t._v("提交后发现丢了几个文件没有提交")])]),t._v(" "),i("p",[t._v("发现丢了修改记录，重新添加 "),i("strong",[t._v('git add "*.html"')]),t._v(" 重新提交，最终只有一个提交 "),i("strong",[t._v("git commit --amend")])]),t._v(" "),i("ul",[i("li",[t._v("缓存某种后缀的文件")])]),t._v(" "),i("p",[i("strong",[t._v('git add "*.js"')])]),t._v(" "),i("ul",[i("li",[t._v("清除缓存区中的文件")])]),t._v(" "),i("p",[i("strong",[t._v("git reset octofamily/octodog.txt")])]),t._v(" "),i("ul",[i("li",[t._v("彻底删除某种后缀的文件")])]),t._v(" "),i("p",[i("strong",[t._v('git rm "*.txt"')])]),t._v(" "),i("ul",[i("li",[t._v("合并分支到master")])]),t._v(" "),i("p",[i("strong",[t._v("git merge 分支名")])]),t._v(" "),i("ul",[i("li",[t._v("add .之前取消提交某些文件")])]),t._v(" "),i("p",[i("strong",[t._v("git checkout -- "),i("filename")],1)]),t._v(" "),i("ul",[i("li",[t._v("藏代码到脏目录（适用于其他成员修改了相同分支代码，但又不想提交）")])]),t._v(" "),i("p",[i("strong",[t._v("git stash")])]),t._v(" "),i("ul",[i("li",[t._v("释放脏目录代码")])]),t._v(" "),i("p",[i("strong",[t._v("git stash pop")])]),t._v(" "),i("ul",[i("li",[t._v("释放指定脏目录代码")])]),t._v(" "),i("p",[i("strong",[t._v("git stash pop stash@{0}")])]),t._v(" "),i("ul",[i("li",[t._v("删除远程分支(此分支必须是非默认分支)")])]),t._v(" "),i("p",[i("strong",[t._v("git push origin --delete branchname")])]),t._v(" "),i("ul",[i("li",[t._v("已经commit，强制回退到旧版本")])]),t._v(" "),i("p",[t._v("​       \t"),i("strong",[t._v("git log")]),t._v("//找到commit hash值 "),i("strong",[t._v("git reset --hard hash值")])]),t._v(" "),i("ul",[i("li",[t._v("查看stash目录")])]),t._v(" "),i("p",[i("strong",[t._v("git stash list")])]),t._v(" "),i("ul",[i("li",[t._v("删除某一个stash")])]),t._v(" "),i("p",[i("strong",[t._v("git stash drop stash@{0}")])]),t._v(" "),i("ul",[i("li",[t._v("设置远程仓库地址")])]),t._v(" "),i("p",[i("strong",[t._v("git remote set-url origin git@foo.bar.com:baz/helloworld.git")])]),t._v(" "),i("ul",[i("li",[t._v("本地创建了新分支，但是orgin没有，push代码前")])]),t._v(" "),i("p",[i("strong",[t._v("git push --set-upstream origin preproduction")])]),t._v(" "),i("p",[i("img",{attrs:{src:_(409),alt:"git1"}})]),t._v(" "),i("p",[i("img",{attrs:{src:_(410),alt:"git2"}})])])}),[],!1,null,null,null);v.default=g.exports}}]);