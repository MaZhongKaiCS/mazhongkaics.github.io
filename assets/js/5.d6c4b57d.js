(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{384:function(t,a,s){t.exports=s.p+"assets/img/ajax1.bac60815.png"},385:function(t,a,s){t.exports=s.p+"assets/img/ajax2.1013182d.png"},386:function(t,a,s){t.exports=s.p+"assets/img/ajax3.e768be85.png"},387:function(t,a,s){t.exports=s.p+"assets/img/ajax4.ee5d27d9.png"},388:function(t,a,s){t.exports=s.p+"assets/img/ajax5.d3c1a196.png"},429:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"认识-ajax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#认识-ajax"}},[t._v("#")]),t._v(" 认识 ajax")]),t._v(" "),n("p",[t._v("Ajax 等于异步 js 和 XML")]),t._v(" "),n("p",[t._v("不是一个编程语言，是一种使用现有标准的方法")]),t._v(" "),n("p",[t._v("最大的优点就是不需要重新加载整个页面，可以与服务器交换数据并更新部分页面内容。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(384),alt:"ajax-简介"}})]),t._v(" "),n("h2",{attrs:{id:"创建-xmlhttprequest对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建-xmlhttprequest对象"}},[t._v("#")]),t._v(" 创建 XMLHTTPRequest对象")]),t._v(" "),n("p",[t._v("XMLHttpRequest 是 Ajax 的基础。")]),t._v(" "),n("p",[t._v("创建 XMLHttpRequest 对象语法")]),t._v(" "),n("p",[t._v("为了应对所有的现代浏览器，包括 IE5、IE6，所以要检查浏览器是否支持XMLHttpRequest，如果不支持就创建ActiveXObject。")]),t._v(" "),n("p",[t._v("例子：")]),t._v(" "),n("div",{staticClass:"language-javaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XMLHttpRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码 ")]),t._v("\nxmlhttp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE6, IE5 浏览器执行代码 ")]),t._v("\nxmlhttp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActiveXObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft.XMLHTTP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"向服务器发送请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向服务器发送请求"}},[t._v("#")]),t._v(" 向服务器发送请求")]),t._v(" "),n("p",[t._v("XMLHttpRequest 对象用于和服务器交换数据。")]),t._v(" "),n("p",[t._v("用到的方法：open() 和 send()")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ajax_info.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(385),alt:"ajax2"}})]),t._v(" "),n("h4",{attrs:{id:"重点-get-和-post-方法的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重点-get-和-post-方法的区别"}},[t._v("#")]),t._v(" 重点："),n("strong",[t._v("GET 和 POST 方法的区别：")])]),t._v(" "),n("p",[n("strong",[t._v("1、发送的数据数量")])]),t._v(" "),n("p",[t._v("在 GET 中，只能发送有限数量的数据，因为数据是在 URL 中发送的。")]),t._v(" "),n("p",[t._v("在 POST 中，可以发送大量的数据，因为数据是在正文主体中发送的。")]),t._v(" "),n("p",[n("strong",[t._v("2、安全性")])]),t._v(" "),n("p",[t._v("GET 方法发送的数据不受保护，因为数据在 URL 栏中公开，这增加了漏洞和黑客攻击的风险。")]),t._v(" "),n("p",[t._v("POST 方法发送的数据是安全的，因为数据未在 URL 栏中公开，还可以在其中使用多种编码技术，这使其具有弹性。")]),t._v(" "),n("p",[n("strong",[t._v("3、加入书签中")])]),t._v(" "),n("p",[t._v("GET 查询的结果可以加入书签中，因为它以 URL 的形式存在；而 POST 查询的结果无法加入书签中。")]),t._v(" "),n("p",[n("strong",[t._v("4、编码")])]),t._v(" "),n("p",[t._v("在表单中使用 GET 方法时，数据类型中只接受 ASCII 字符。")]),t._v(" "),n("p",[t._v("在表单提交时，POST 方法不绑定表单数据类型，并允许二进制和 ASCII 字符。")]),t._v(" "),n("p",[n("strong",[t._v("5、可变大小")])]),t._v(" "),n("p",[t._v("GET 方法中的可变大小约为 2000 个字符。")]),t._v(" "),n("p",[t._v("POST 方法最多允许 8 Mb 的可变大小。")]),t._v(" "),n("p",[n("strong",[t._v("6、缓存")])]),t._v(" "),n("p",[t._v("GET 方法的数据是可缓存的，而 POST 方法的数据是无法缓存的。")]),t._v(" "),n("p",[n("strong",[t._v("7、主要作用")])]),t._v(" "),n("p",[t._v("GET 方法主要用于获取信息。而 POST 方法主要用于更新数据。")]),t._v(" "),n("p",[t._v("get（）和 post（）")]),t._v(" "),n("p",[t._v("两种在客户端和服务器端进行请求-响应的常用方法是：GET 和 POST。")]),t._v(" "),n("ul",[n("li",[n("em",[t._v("GET")]),t._v(" - 从指定的资源请求数据")]),t._v(" "),n("li",[n("em",[t._v("POST")]),t._v(" - 向指定的资源提交要处理的数据")])]),t._v(" "),n("p",[t._v("如果需要像 HTML 表单那样 POST 数据，请使用 setRequestHeader() 来添加 HTTP 头。然后在 send() 方法中规定您希望发送的数据：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/try/ajax/demo_post2.php"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nxmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/x-www-form-urlencoded"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fname=Henry&lname=Ford"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(386),alt:"ajax3"}})]),t._v(" "),n("h2",{attrs:{id:"服务器响应"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应"}},[t._v("#")]),t._v(" 服务器响应")]),t._v(" "),n("p",[t._v("如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(387),alt:"ajax4"}})]),t._v(" "),n("p",[t._v("如果来自服务器的响应并非 XML，请使用 responseText 属性。")]),t._v(" "),n("p",[t._v("如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，请使用 responseXML 属性。")]),t._v(" "),n("h2",{attrs:{id:"ajax-onreadystatechange-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax-onreadystatechange-事件"}},[t._v("#")]),t._v(" ajax onreadystatechange 事件")]),t._v(" "),n("p",[n("img",{attrs:{src:s(388),alt:"ajax5"}})]),t._v(" "),n("p",[t._v("在 onreadystatechange 事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。")]),t._v(" "),n("p",[t._v("当 readyState 等于 4 且状态为 200 时，表示响应已就绪。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myDiv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xmlhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"ajax-get-封装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax-get-封装"}},[t._v("#")]),t._v(" ajax get 封装")]),t._v(" "),n("p",[t._v("在 HTML 文件中引用 js 文件，js 文件用于封装方法，在 HTML 文件中直接使用方法，注意 IE 浏览器的兼容问题。")]),t._v(" "),n("h4",{attrs:{id:"html-文件中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-文件中"}},[t._v("#")]),t._v(" HTML 文件中：")]),t._v(" "),n("p",[t._v("1、引用 js 文件")]),t._v(" "),n("p",[t._v("2、通过绑定 button 的点击事件，使用ajax方法（js 文件里面定义的方法）")]),t._v(" "),n("p",[t._v("3、body 中添加按钮标签")]),t._v(" "),n("h4",{attrs:{id:"js-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-文件"}},[t._v("#")]),t._v(" js 文件：")]),t._v(" "),n("p",[t._v("1、obj2str 方法：处理 ajax 方法中的 obj  主要是通过遍历的方式，将实参 obj 对象转换为字符串")]),t._v(" "),n("p",[t._v("注意点：浏览器发送请求时不能包含中文，需要转化格式，需要使用 encodeURIComponent 方法")]),t._v(" "),n("p",[t._v("需要在生成的字符串中通过&连接，所以在末尾添加 join 方法来添加&")]),t._v(" "),n("p",[t._v("2、ajax 方法：参数：")]),t._v(" "),n("p",[t._v("url：需要引用php文件的路径或者是文件名")]),t._v(" "),n("p",[t._v("obj：需要传入的对象")]),t._v(" "),n("p",[t._v("timeout：定义一个请求超时的数字")]),t._v(" "),n("p",[t._v("success：请求成功会触发的函数")]),t._v(" "),n("p",[t._v("error：请求失败会触发的函数")]),t._v(" "),n("p",[t._v("步骤：")]),t._v(" "),n("p",[t._v("​\t0、将对象转化为字符串")]),t._v(" "),n("p",[t._v("​\t1、创建一个异步对象（需要兼容浏览器）")]),t._v(" "),n("p",[t._v("​\t2、设置请求方式和请求地址")]),t._v(" "),n("p",[t._v("​\t3、发送请求")]),t._v(" "),n("p",[t._v("​\t4、监听请求的变化（状态的变化）\t\n​        0：请求未初始化\n1：服务器连接已建立\n​    \t 2：请求已接收\n​        3：请求处理中\n​        4：请求已完成，且响应已就绪")]),t._v(" "),n("p",[t._v("最后的末尾 设置定时器来处理请求超时事件")]),t._v(" "),n("p",[t._v("php 文件：")]),t._v(" "),n("p",[t._v("使用 $_GET 方法")]),t._v(" "),n("h2",{attrs:{id:"ajax-post"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax-post"}},[t._v("#")]),t._v(" ajax post")]),t._v(" "),n("p",[t._v("直接在 HTML 文件中添加事件请求方法，还是注意浏览器的兼容性，还有POST 需要在 open 和 send 方法之间添加setRequestHeader 方法，post 方法需要在 send 方法中添加  请求对象")]),t._v(" "),n("h2",{attrs:{id:"cookie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),n("p",[t._v("cookie：回话跟踪技术 客户端")]),t._v(" "),n("p",[t._v("session：会话跟踪技术 服务端")]),t._v(" "),n("p",[t._v("cookie 作用：")]),t._v(" "),n("p",[t._v("将网页中的数据保存到浏览器中")]),t._v(" "),n("p",[t._v("cookie 生命周期：")]),t._v(" "),n("p",[t._v("默认情况下，生命周期是一次会话（浏览器被关闭）")]),t._v(" "),n("p",[t._v("如果通过 expires= 设置了过期时间，并且过期时间没有过期，那么下次打开浏览器还是存在")]),t._v(" "),n("p",[t._v("如果通过 expires设置了过期时间，并且过期时间已经过期，那么会立即删除保存的数据")]),t._v(" "),n("p",[t._v("cookie 注意点：")]),t._v(" "),n("p",[t._v("cookie 默认不会保存任何的数据")]),t._v(" "),n("p",[t._v("cookie 不能一次性设置多条数据，想要保存多条数据，只能一条一条的设置")]),t._v(" "),n("p",[t._v("cookie 有大小和个数的限制：")]),t._v(" "),n("p",[t._v("个数限制：20~50")]),t._v(" "),n("p",[t._v("大小限制：4kb 左右")]),t._v(" "),n("p",[t._v("cookie 作用范围：")]),t._v(" "),n("p",[t._v("同一个浏览器的同一个路径下访问")]),t._v(" "),n("p",[t._v("同一个浏览器的下一级路径也可以访问")]),t._v(" "),n("p",[t._v("如果想要在同一个浏览器中，上一级目录也可以访问到保存的 cookie，那么需要添加一个 path 属性，path=/")])])}),[],!1,null,null,null);a.default=e.exports}}]);