(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{412:function(t,s,i){t.exports=i.p+"assets/img/git8.bdf04500.png"},413:function(t,s,i){t.exports=i.p+"assets/img/git9.30737f3a.png"},414:function(t,s,i){t.exports=i.p+"assets/img/git10.1c9c5b36.png"},415:function(t,s,i){t.exports=i.p+"assets/img/git11.0734cfb0.png"},416:function(t,s,i){t.exports=i.p+"assets/img/git12.7e209da8.png"},417:function(t,s,i){t.exports=i.p+"assets/img/git13.e0bacf5b.png"},418:function(t,s,i){t.exports=i.p+"assets/img/git14.4a913c4e.png"},439:function(t,s,i){"use strict";i.r(s);var v=i(0),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"管理修改-撤销修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#管理修改-撤销修改"}},[t._v("#")]),t._v(" 管理修改 撤销修改")]),t._v(" "),v("h4",{attrs:{id:"管理修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#管理修改"}},[t._v("#")]),t._v(" 管理修改")]),t._v(" "),v("p",[t._v("经过两次修改，第一次修改之后使用 git add 将文件从工作区存放到版本库里面的暂存区，第二次修改之后直接使用 git commit 出现的结果是 只有第一次修改的文件提交了。")]),t._v(" "),v("p",[v("img",{attrs:{src:i(412),alt:"git8"}})]),t._v(" "),v("p",[t._v("经过两次修改，第一次修改之后使用 git add 将文件从工作区存放到版本库里面的暂存区，第二次修改之后也使用git add 将文件放入暂存区，再使用一个git commit提交。")]),t._v(" "),v("p",[v("img",{attrs:{src:i(413),alt:"git9"}})]),t._v(" "),v("p",[v("strong",[t._v("小结")])]),t._v(" "),v("p",[t._v("现在，你又理解了Git是如何跟踪修改的，每次修改，如果不用git add到暂存区，那就不会加入到commit中。")]),t._v(" "),v("p",[t._v("撤销修改(不同系统有不同的撤销语法）这里的前提都是在版本库里面已经有文件了（也就是已经有过一次git commit）")]),t._v(" "),v("h4",{attrs:{id:"撤销修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),v("p",[t._v("(不同系统有不同的撤销语法）这里的前提都是在版本库里面已经有文件了（也就是已经有过一次git commit）")]),t._v(" "),v("p",[v("img",{attrs:{src:i(414),alt:"git10"}})]),t._v(" "),v("p",[t._v("mac：")]),t._v(" "),v("p",[t._v("场景一：当你在工作区修改错误，想要回复到和版本号中一样的，使用 "),v("code",[t._v("git restore xxx")])]),t._v(" "),v("p",[v("img",{attrs:{src:i(415),alt:"git11"}})]),t._v(" "),v("p",[t._v("场景二：将修改错误的文件git add之后放到了暂存区，可以使用 "),v("code",[t._v("git restore --staged file...")]),t._v("  (to unstage意思是把暂存区的修改撤销掉，重新放回工作区),然后再使用场景一中的方法修改回复")]),t._v(" "),v("p",[v("img",{attrs:{src:i(416),alt:"git12"}})]),t._v(" "),v("p",[t._v("场景三：已经把错误的文件提交了，但是想要撤销，参考版本回退，不过前提是没有推送到远程库。")]),t._v(" "),v("h5",{attrs:{id:"删除文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件：")]),t._v(" "),v("p",[t._v("(以下是mac版本的操作）")]),t._v(" "),v("p",[t._v("一般情况下，你通常直接在文件管理器中没用的文件删了，或者用 rm 命令删了。")]),t._v(" "),v("p",[v("code",[t._v("rm xxx")])]),t._v(" "),v("p",[t._v("这个时候，git收到了你删除文件的信号，工作区和版本库就不一致了，git status命令立刻告诉你哪些文件被删除了")]),t._v(" "),v("p",[v("img",{attrs:{src:i(417),alt:"git13"}})]),t._v(" "),v("p",[t._v("现在有两个选择，一是确定从版本库中删除该文件，使用 "),v("code",[t._v("git rm file")]),t._v("删除，并且使用")]),t._v(" "),v("p",[v("code",[t._v('git commit -m"remove xxx"')]),t._v("  现在文件从版本库中被删除")]),t._v(" "),v("p",[t._v("特殊情况：当你手动在文件夹中删除了文件，你使用 git add/git rm的效果都是一样的，都是删除。（下面的截图是使用git add的情况，显示的结果还是delete ）")]),t._v(" "),v("p",[v("img",{attrs:{src:i(418),alt:"git14"}})]),t._v(" "),v("p",[t._v("另一种情况是删错了，需要恢复，从版本库里面把误删的文件恢复到最新版本：")]),t._v(" "),v("p",[v("code",[t._v("git checkout -- file")])]),t._v(" "),v("p",[t._v("在mac中："),v("code",[t._v("git restore file")]),t._v("就可以了")]),t._v(" "),v("p",[t._v("注意：从来没有添加到版本库里就被删除的文件无法恢复。")]),t._v(" "),v("p",[v("strong",[t._v("小结")])]),t._v(" "),v("p",[t._v("命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失"),v("strong",[t._v("最近一次提交后你修改的内容")]),t._v("。")])])}),[],!1,null,null,null);s.default=_.exports}}]);